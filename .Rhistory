)
+
geom_contour(breaks = c(min(cum_mortality_df$cm),
baseline_cm(bed_capacity)$cm,
max(cum_mortality_df$cm)),
data = cum_mortality_df[cum_mortality_df$cc == bed_capacity, ])
+
geom_contour(breaks = c(min(cum_mortality_df$cm),
baseline_cm(140)$cm,
max(cum_mortality_df$cm)),
data = cum_mortality_df[cum_mortality_df$cc == 140, ])
+
geom_point(data = baseline_cm(bed_capacity), size = 3, col = "blue")
+
lims(x = c(0, 1))
+
#geom_vline(aes(xintercept = ps), data = baseline_cm(bed_capacity))
#+
geom_hline(aes(yintercept = du), data = baseline_cm(bed_capacity))
+
labs(#title = "Cumulative mortality at given number of beds",
x = "Probablilty of surving"
, y = "Hospital duration (days)"
, color = "Number of beds")
+
theme_bw()
+
ggeasy::easy_center_title()
)
plot2
plot2 <- (ggplot()
+
aes(x = ps, y = du, z = cm, color = as.character(cc)
)
+
geom_contour(breaks = c(min(cum_mortality_df$cm),
baseline_cm(bed_capacity)$cm,
max(cum_mortality_df$cm)),
data = cum_mortality_df[cum_mortality_df$cc == bed_capacity, ])
+
geom_contour(breaks = c(min(cum_mortality_df$cm),
baseline_cm(100)$cm,
max(cum_mortality_df$cm)),
data = cum_mortality_df[cum_mortality_df$cc == 100, ])
+
geom_point(data = baseline_cm(bed_capacity), size = 3, col = "blue")
+
lims(x = c(0, 1))
+
#geom_vline(aes(xintercept = ps), data = baseline_cm(bed_capacity))
#+
geom_hline(aes(yintercept = du), data = baseline_cm(bed_capacity))
+
labs(#title = "Cumulative mortality at given number of beds",
x = "Probablilty of surving"
, y = "Hospital duration (days)"
, color = "Number of beds")
+
theme_bw()
+
ggeasy::easy_center_title()
)
plot2
plot2 <- (ggplot()
+
aes(x = ps, y = du, z = cm, color = as.character(cc)
)
+
geom_contour(breaks = c(min(cum_mortality_df$cm),
baseline_cm(bed_capacity)$cm,
max(cum_mortality_df$cm)),
data = cum_mortality_df[cum_mortality_df$cc == bed_capacity, ])
+
geom_contour(breaks = c(min(cum_mortality_df$cm),
baseline_cm(100)$cm,
max(cum_mortality_df$cm)),
data = cum_mortality_df[cum_mortality_df$cc == 100, ])
+
geom_point(data = baseline_cm(bed_capacity), size = 3, col = "blue")
+
lims(x = c(0, 1))
+
geom_vline(aes(xintercept = ps), data = baseline_cm(bed_capacity))
+
geom_hline(aes(yintercept = du), data = baseline_cm(bed_capacity))
+
labs(#title = "Cumulative mortality at given number of beds",
x = "Probablilty of surving"
, y = "Hospital duration (days)"
, color = "Number of beds")
+
theme_bw()
+
ggeasy::easy_center_title()
)
plot2
.args <- if(interactive()){
c("./output/sars_cov_2_outputs.RData",  # inputs
"./data/toci_treat.xlsx",
"./figs/sars_cov_2_plot.jpg")  # outputs
}else{
commandArgs(trailingOnly = TRUE)
}
target <- tail(.args, 1)
library(ggplot2)
library(readxl)
library(dplyr)
library(tidyr)
library(patchwork)
load(.args[[1]])
new_out <- baseline_output %>%
pivot_longer(S:CA, values_to = "Count", names_to = "States")
plot1 <- (ggplot(new_out)
+
geom_line(aes(
x = time,
y = Count,
col = States
), size = 1)
+
labs(
x = "Time(days)"
, y = "Population"
, title = "Probability of surviving is 75%, 12 days of hospitalization
with 20 availabe beds in population of 150000 individuals."
)
+
facet_wrap(~States, scales = "free")
+
ggeasy::easy_center_title()
+
theme_bw()
)
bed_capacity <- 20
p1 <- read_xlsx(.args[[2]])
psb1 <- p1$usual_value
names(psb1) <- p1$parms
baseline_cm <- function(bed_cap, psb = .71, dub = 19) cum_mortality_df %>%
filter(ps == psb, du == dub, cc == bed_cap)
plot2 <- (ggplot()
+
aes(x = ps, y = du, z = cm, color = as.character(cc)
)
+
geom_contour(breaks = c(min(cum_mortality_df$cm),
baseline_cm(bed_capacity)$cm,
max(cum_mortality_df$cm)),
data = cum_mortality_df[cum_mortality_df$cc == bed_capacity, ])
+
geom_contour(breaks = c(min(cum_mortality_df$cm),
baseline_cm(100)$cm,
max(cum_mortality_df$cm)),
data = cum_mortality_df[cum_mortality_df$cc == 100, ])
+
geom_point(data = baseline_cm(bed_capacity), size = 3, col = "blue")
+
lims(x = c(0, 1))
+
geom_vline(aes(xintercept = ps), data = baseline_cm(bed_capacity))
+
geom_hline(aes(yintercept = du), data = baseline_cm(bed_capacity))
+
labs(#title = "Cumulative mortality at given number of beds",
x = "Probablilty of surving"
, y = "Hospital duration (days)"
, color = "Number of beds")
+
theme_bw()
+
ggeasy::easy_center_title()
)
if(dir.exists("./figs")){
ggsave(filename = target,
plot = plot2,
width = 8.51,
height = 5.67,
units = "in")
}else{
dir.create("./figs")
ggsave(filename = target,
plot = plot2,
width = 8.51,
height = 5.67,
units = "in")
}
plot2
plot2 <- (ggplot()
+
aes(x = ps, y = du, z = cm, color = as.character(cc)
)
+
geom_contour(breaks = c(min(cum_mortality_df$cm),
baseline_cm(bed_capacity)$cm,
max(cum_mortality_df$cm)),
data = cum_mortality_df[cum_mortality_df$cc == bed_capacity, ])
+
geom_contour(breaks = c(min(cum_mortality_df$cm),
baseline_cm(100)$cm,
max(cum_mortality_df$cm)),
data = cum_mortality_df[cum_mortality_df$cc == 100, ])
+
geom_contour(breaks = c(min(cum_mortality_df$cm),
baseline_cm(140)$cm,
max(cum_mortality_df$cm)),
data = cum_mortality_df[cum_mortality_df$cc == 140, ])
+
geom_point(data = baseline_cm(bed_capacity), size = 3, col = "blue")
+
lims(x = c(0, 1))
+
geom_vline(aes(xintercept = ps), data = baseline_cm(bed_capacity))
+
geom_hline(aes(yintercept = du), data = baseline_cm(bed_capacity))
+
labs(#title = "Cumulative mortality at given number of beds",
x = "Probablilty of surving"
, y = "Hospital duration (days)"
, color = "Number of beds")
+
theme_bw()
+
ggeasy::easy_center_title()
)
plot2
.args <- if(interactive()){
c("./output/sars_cov_2_outputs.RData",  # inputs
"./figs/sars_cov_2_model.jpg")  # outputs
}else{
commandArgs(trailingOnly = TRUE)
}
target <- tail(.args, 1)
library(ggplot2)
library(readxl)
library(dplyr)
library(tidyr)
load(.args[[1]])
new_out <- baseline_output %>%
pivot_longer(S:CA, values_to = "Count", names_to = "States")
new_out
tail(new_out)
plot1 <- (ggplot(new_out)
+
geom_line(aes(
x = time,
y = Count,
col = States
), size = 1)
+
labs(
x = "Time(days)"
, y = "Population"
, title = "Probability of surviving is 75%, 12 days of hospitalization
with 20 availabe beds in population of 150000 individuals."
)
+
facet_wrap(~States, scales = "free")
+
ggeasy::easy_center_title()
+
theme_bw()
)
plot1
plot1 <- (ggplot(new_out)
+
geom_line(aes(
x = time,
y = Count,
col = States
), size = 1)
#+
#labs(
#x = "Time(days)"
#, y = "Population"
#, title = "Probability of surviving is 75%, 12 days of hospitalization
#     with 20 availabe beds in population of 150000 individuals."
#)
+
facet_wrap(~States, scales = "free")
+
ggeasy::easy_center_title()
+
theme_bw()
)
plot1
p1 <- read_xlsx(.args[[2]])
p1 <- read_xlsx(.args[[2]])
.args <- if(interactive()){
c("./output/sars_cov_2_outputs.RData",  # inputs
"./data/toci_treat.xlsx",
"./figs/sars_cov_2_model.jpg")  # outputs
}else{
commandArgs(trailingOnly = TRUE)
}
target <- tail(.args, 1)
library(ggplot2)
library(readxl)
library(dplyr)
library(tidyr)
load(.args[[1]])
p1 <- read_xlsx(.args[[2]])
psb1 <- p1$usual_value
names(psb1) <- p1$parms
psb1
View(cum_mortality_df)
baseline_output
baseline_output
.args <- if(interactive()){
c("./output/sars_cov_2_outputs.RData",  # inputs
"./data/toci_treat.xlsx",
"./figs/sars_cov_2_plot.jpg")  # outputs
}else{
commandArgs(trailingOnly = TRUE)
}
target <- tail(.args, 1)
library(ggplot2)
library(readxl)
library(dplyr)
library(tidyr)
library(patchwork)
load(.args[[1]])
bed_capacity <- 20
baseline_cm <- function(bed_cap, psb = .62, dub = 10) cum_mortality_df %>%
filter(ps == psb, du == dub, cc == bed_cap)
baseline_cm
p1 <- read_xlsx(.args[[2]])
p1
cum_mortality_df %>%
filter(ps == psb, du == dub, cc == bed_cap)
psb1 <- p1$usual_value
names(psb1) <- p1$parms
p1
p1 <- read_xlsx(.args[[2]])
psb1 <- p1$usual_value
names(psb1) <- p1$parms
p1
psb1
psb1$ps
psb1[ps]
psb1["ps"]
psb1[1]
psb1[[ps]]
psb1[["ps"]]
typeof(psb1[["ps"]])
typeof(psb1["ps"])
psb1
baseline_cm <- function(bed_cap, psb = psb1[["ps"]], dub = psb1[["du"]]) cum_mortality_df %>%
filter(ps == psb, du == dub, cc == bed_cap)
.args <- if(interactive()){
c("./output/sars_cov_2_outputs.RData",  # inputs
"./data/toci_treat.xlsx",
"./figs/sars_cov_2_plot.jpg")  # outputs
}else{
commandArgs(trailingOnly = TRUE)
}
target <- tail(.args, 1)
library(ggplot2)
library(readxl)
library(dplyr)
library(tidyr)
library(patchwork)
load(.args[[1]])
bed_capacity <- 20
p1 <- read_xlsx(.args[[2]])
psb1 <- p1$usual_value
names(psb1) <- p1$parms
baseline_cm <- function(bed_cap, psb = psb1[["ps"]], dub = psb1[["du"]]) cum_mortality_df %>%
filter(ps == psb, du == dub, cc == bed_cap)
plot2 <- (ggplot()
+
aes(x = ps, y = du, z = cm, color = as.character(cc)
)
+
geom_contour(breaks = c(min(cum_mortality_df$cm),
baseline_cm(bed_capacity)$cm,
max(cum_mortality_df$cm)),
data = cum_mortality_df[cum_mortality_df$cc == bed_capacity, ])
+
geom_contour(breaks = c(min(cum_mortality_df$cm),
baseline_cm(100)$cm,
max(cum_mortality_df$cm)),
data = cum_mortality_df[cum_mortality_df$cc == 100, ])
+
geom_contour(breaks = c(min(cum_mortality_df$cm),
baseline_cm(140)$cm,
max(cum_mortality_df$cm)),
data = cum_mortality_df[cum_mortality_df$cc == 140, ])
+
geom_point(data = baseline_cm(bed_capacity), size = 3, col = "blue")
+
lims(x = c(0, 1))
+
geom_vline(aes(xintercept = ps), data = baseline_cm(bed_capacity))
+
geom_hline(aes(yintercept = du), data = baseline_cm(bed_capacity))
+
labs(#title = "Cumulative mortality at given number of beds",
x = "Probablilty of surviving"
, y = "Hospital duration (days)"
, color = "Number of beds")
+
theme_bw()
+
ggeasy::easy_center_title()
)
plot2
.args <- if(interactive()){
c("./functions/functions.RData", # inputs
"./data/sars_cov_2.RData",
"./data/bed_scen.rds",
"./data/toci_treat.xlsx",
"./output/my_data.RData") # output
}else{
commandArgs(trailingOnly = TRUE)
}
target <- tail(.args, 1)
library(readxl)
library(dplyr)
library(deSolve)
load(.args[[1]])
load(.args[[2]])
bed_scen <- readRDS(.args[[3]])
treat <- read_excel(.args[4])
usual_care <- treat$usual_value
names(usual_care) <- treat$parms
treat_care <- treat$treat_value
names(treat_care) <- treat$parms
count_usual <- c(usual_care, cc = bed_scen$cc)
treat_df <- run_covid(
t = time_seq,
pp = parm_values,
vals = c(treat_care,cc = 20),
statev = state_var,
ret_cm = FALSE )
treat_df <- treat_df %>%
mutate(Cur_addm = rowSums(cbind(treat_df$Hts, treat_df$Htd))) %>%
mutate(cum_add_days = cumsum(Cur_addm)) %>%
select(CA, cum_add_days)
casual_df <- run_covid(
t = time_seq,
pp = parm_values,
vals = count_usual,
statev = state_var,
ret_cm = FALSE )
casual_df <- casual_df %>%
mutate(Cur_addm = rowSums(cbind(casual_df$Hts, casual_df$Htd))) %>%
mutate(cum_add_days = cumsum(Cur_addm)) %>%
select(CA, cum_add_days)
save(treat_df, casual_df, file = target)
.args <- if(interactive()){
c("./output/sars_cov_2_outputs.RData",  # inputs
"./data/toci_treat.xlsx",
"./data/bed_scen.rds")  # outputs
}else{
commandArgs(trailingOnly = TRUE)
}
library(dplyr)
library(readxl)
target <- tail(.args, 1)
load(.args[[1]])
base_toc1 <- read_excel(.args[2])
baseline_dat <- base_toc1$usual_value
names(baseline_dat) <- base_toc1$parms
base_toc <- cum_mortality_df %>%
filter(ps == baseline_dat["ps"], du == baseline_dat["du"], cc == 20)
treat_dat <- base_toc1$treat_value
names(treat_dat) <- base_toc1$parms
treat_toc <- cum_mortality_df %>%
filter(round(ps, 2) == treat_dat["ps"], du == treat_dat["du"], cc == 20)
treat_cm <- treat_toc %>% select(cm)
bed_scen <- cum_mortality_df %>%
filter(round(ps, 2) == baseline_dat["ps"], du == baseline_dat["du"]) %>%
mutate(tmp = cm - as.numeric(treat_cm)) %>%
filter(abs(tmp) == min(abs(tmp)))
bed_scen
bed_scen <- cum_mortality_df %>%
filter(round(ps, 2) == baseline_dat["ps"], du == baseline_dat["du"]) %>%
mutate(tmp = cm - as.numeric(treat_cm)) %>%
filter(abs(tmp) == min(abs(tmp)))
saveRDS(bed_scen, file = target)
bed_scen <- readRDS("~/SACEMA PROJECT/Project/Project_Msc/data/bed_scen.rds")
View(bed_scen)
sars2_remd <- readRDS("~/SACEMA PROJECT/Project/Project_Msc/data/sars2_remd.rds")
View(sars2_remd)
.args <- if(interactive()){
c("./output/sars_cov_2_outputs.RData",  # inputs
"./data/toci_treat.xlsx",
"./data/bed_scen.rds")  # outputs
}else{
commandArgs(trailingOnly = TRUE)
}
library(dplyr)
library(readxl)
target <- tail(.args, 1)
load(.args[[1]])
base_toc1 <- read_excel(.args[2])
baseline_dat <- base_toc1$usual_value
names(baseline_dat) <- base_toc1$parms
base_toc <- cum_mortality_df %>%
filter(ps == baseline_dat["ps"], du == baseline_dat["du"], cc == 23)
treat_dat <- base_toc1$treat_value
names(treat_dat) <- base_toc1$parms
treat_toc <- cum_mortality_df %>%
filter(round(ps, 2) == treat_dat["ps"], du == treat_dat["du"], cc == 23)
treat_cm <- treat_toc %>% select(cm)
treat_cm
treat_cm
bed_scen
bed_scen <- cum_mortality_df %>%
filter(round(ps, 2) == baseline_dat["ps"], du == baseline_dat["du"]) %>%
mutate(tmp = cm - as.numeric(treat_cm)) %>%
filter(abs(tmp) == min(abs(tmp)))
bed_scen
