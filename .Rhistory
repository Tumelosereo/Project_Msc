baseline_cm <- function(bed_cap, psb = .71, dub = 15) new_df %>%
filter(ps == psb, du == dub, cc == bed_cap)
(ggplot()
+
aes(x = ps, y = du, z = cm, color = as.character(cc)
)
+
geom_contour(breaks = c(min(new_df$cm), baseline_cm(bed_capacity)$cm, max(new_df$cm)), data = new_df[new_df$cc == bed_capacity, ])
+
geom_contour(breaks = c(min(new_df$cm), baseline_cm(180)$cm, max(new_df$cm)), data = new_df[new_df$cc == 180, ])
+
geom_point(data = baseline_cm(bed_capacity), size = 3, col = "blue")
+
lims(x = c(0, 1))
+
geom_vline(aes(xintercept = ps), data = baseline_cm(bed_capacity))
+
geom_hline(aes(yintercept = du), data = baseline_cm(bed_capacity))
+
labs(title = "Cumulative mortality at given number of beds"
, x = "Probablilty of surving"
, y = "Hospital duration (days)"
, color = "Number of beds")
+
theme_bw()
+
ggeasy::easy_center_title()
)
bed_capacity <- 20
baseline_cm <- function(bed_cap, psb = .71, dub = 15) new_df %>%
filter(ps == psb, du == dub, cc == bed_cap)
(ggplot()
+
aes(x = ps, y = du, z = cm, color = as.character(cc)
)
+
geom_contour(breaks = c(min(new_df$cm), baseline_cm(bed_capacity)$cm, max(new_df$cm)), data = new_df[new_df$cc == bed_capacity, ])
+
geom_contour(breaks = c(min(new_df$cm), baseline_cm(180)$cm, max(new_df$cm)), data = new_df[new_df$cc == 180, ])
+
geom_point(data = baseline_cm(bed_capacity), size = 3, col = "blue")
+
lims(x = c(0, 1))
+
geom_vline(aes(xintercept = ps), data = baseline_cm(bed_capacity))
+
geom_hline(aes(yintercept = du), data = baseline_cm(bed_capacity))
+
labs(title = "Cumulative mortality at given number of beds"
, x = "Probablilty of surving"
, y = "Hospital duration (days)"
, color = "Number of beds")
+
theme_bw()
+
ggeasy::easy_center_title()
)
baseline_cm <- function(bed_cap, psb = .75, dub = 15) new_df %>%
filter(ps == psb, du == dub, cc == bed_cap)
(ggplot()
+
aes(x = ps, y = du, z = cm, color = as.character(cc)
)
+
geom_contour(breaks = c(min(new_df$cm), baseline_cm(bed_capacity)$cm, max(new_df$cm)), data = new_df[new_df$cc == bed_capacity, ])
+
geom_contour(breaks = c(min(new_df$cm), baseline_cm(180)$cm, max(new_df$cm)), data = new_df[new_df$cc == 180, ])
+
geom_point(data = baseline_cm(bed_capacity), size = 3, col = "blue")
+
lims(x = c(0, 1))
+
geom_vline(aes(xintercept = ps), data = baseline_cm(bed_capacity))
+
geom_hline(aes(yintercept = du), data = baseline_cm(bed_capacity))
+
labs(title = "Cumulative mortality at given number of beds"
, x = "Probablilty of surving"
, y = "Hospital duration (days)"
, color = "Number of beds")
+
theme_bw()
+
ggeasy::easy_center_title()
)
ps = seq(0, 1, 0.05)
ps
ps = seq(0, 1, 0.01)
ps
library(ggplot2)
library(dplyr)
library(tidyr)
library(patchwork)
load("./output/new_df.RData")
source("./scripts/run_model.R", local = TRUE)
new_out <- out %>%
pivot_longer(S:CA, values_to = "Count", names_to = "States")
model_out <- (ggplot(new_out)
+
geom_line(aes(
x = time,
y = Count,
col = States
), size = 1)
+
labs(
x = "Time(days)"
, y = "Population"
, title = "Probability of surviving is 75%, 12 days of hospitalization
with 20 availabe beds in population of 150000 individuals."
)
+
facet_wrap(~States, scales = "free")
+
ggeasy::easy_center_title()
+
theme_bw()
)
print(model_out)
if(dir.exists("./figs")){
ggsave(filename = "./figs/model_out.jpg",
plot = model_out,
width = 8.51,
height = 5.67,
units = "in")
}else{
dir.create("./figs")
ggsave(filename = "./figs/model_out.jpg",
plot = model_dynmc,
width = 8.51,
height = 5.67,
units = "in")
}
bed_capacity <- 20
baseline_cm <- function(bed_cap, psb = .71, dub = 15) new_df %>%
filter(ps == psb, du == dub, cc == bed_cap)
(ggplot()
+
aes(x = ps, y = du, z = cm, color = as.character(cc)
)
+
geom_contour(breaks = c(min(new_df$cm), baseline_cm(bed_capacity)$cm, max(new_df$cm)), data = new_df[new_df$cc == bed_capacity, ])
+
geom_contour(breaks = c(min(new_df$cm), baseline_cm(180)$cm, max(new_df$cm)), data = new_df[new_df$cc == 180, ])
+
geom_point(data = baseline_cm(bed_capacity), size = 3, col = "blue")
+
lims(x = c(0, 1))
+
geom_vline(aes(xintercept = ps), data = baseline_cm(bed_capacity))
+
geom_hline(aes(yintercept = du), data = baseline_cm(bed_capacity))
+
labs(title = "Cumulative mortality at given number of beds"
, x = "Probablilty of surving"
, y = "Hospital duration (days)"
, color = "Number of beds")
+
theme_bw()
+
ggeasy::easy_center_title()
)
ps
ps
ps = seq(0, 1, 0.01)
ps
baseline_cm <- function(bed_cap, psb = .71, dub = 15) new_df %>%
filter(ps == psb, du == dub, cc == bed_cap)
(ggplot()
+
aes(x = ps, y = du, z = cm, color = as.character(cc)
)
+
geom_contour(breaks = c(min(new_df$cm), baseline_cm(bed_capacity)$cm, max(new_df$cm)), data = new_df[new_df$cc == bed_capacity, ])
+
geom_contour(breaks = c(min(new_df$cm), baseline_cm(180)$cm, max(new_df$cm)), data = new_df[new_df$cc == 180, ])
+
geom_point(data = baseline_cm(bed_capacity), size = 3, col = "blue")
+
lims(x = c(0, 1))
+
geom_vline(aes(xintercept = ps), data = baseline_cm(bed_capacity))
+
geom_hline(aes(yintercept = du), data = baseline_cm(bed_capacity))
+
labs(title = "Cumulative mortality at given number of beds"
, x = "Probablilty of surving"
, y = "Hospital duration (days)"
, color = "Number of beds")
+
theme_bw()
+
ggeasy::easy_center_title()
)
baseline_cm <- function(bed_cap, psb = .75, dub = 15) new_df %>%
filter(ps == psb, du == dub, cc == bed_cap)
(ggplot()
+
aes(x = ps, y = du, z = cm, color = as.character(cc)
)
+
geom_contour(breaks = c(min(new_df$cm), baseline_cm(bed_capacity)$cm, max(new_df$cm)), data = new_df[new_df$cc == bed_capacity, ])
+
geom_contour(breaks = c(min(new_df$cm), baseline_cm(180)$cm, max(new_df$cm)), data = new_df[new_df$cc == 180, ])
+
geom_point(data = baseline_cm(bed_capacity), size = 3, col = "blue")
+
lims(x = c(0, 1))
+
geom_vline(aes(xintercept = ps), data = baseline_cm(bed_capacity))
+
geom_hline(aes(yintercept = du), data = baseline_cm(bed_capacity))
+
labs(title = "Cumulative mortality at given number of beds"
, x = "Probablilty of surving"
, y = "Hospital duration (days)"
, color = "Number of beds")
+
theme_bw()
+
ggeasy::easy_center_title()
)
ps = seq(0, 1, 0.05)
ps
new_vals <- expand.grid(
ps = seq(0, 1, 0.05),
du = 8:30,
cc =  seq(20, 300, 20)
)
new_vals
library(ggplot2)
library(dplyr)
library(tidyr)
library(patchwork)
load("./output/new_df.RData")
library(ggplot2)
library(dplyr)
library(tidyr)
library(patchwork)
#load("./output/new_df.RData")
source("./scripts/run_model.R", local = TRUE)
library(dplyr)
source("./scripts/inputs.R", local = TRUE)
CM1 <- run_covid(
t = time_seq,
pp = parm_values,
vals = c(
ps = 0.25,
du = 12,
cc = 20
),
statev = state_var
)
new_vals <- expand.grid(
ps = seq(0, 1, 0.01),
du = 8:30,
cc =  seq(20, 300, 20)
)
out <- run_covid(
t = time_seq,
pp = parm_values,
vals = c(ps=.75, du = 15, cc = 20),
statev = state_var, ret_cm = FALSE
)
out
if (file.exists("./output/cm_res.RData")) {
load("./output/cm_res.RData")
} else {
cm_res <- sapply(1:nrow(new_vals), function(ii) {
run_covid(
t = time_seq,
pp = parm_values,
vals = new_vals[ii, ],
statev = state_var
)
})
save(cm_res, file = "./output/cm_res.RData")
}
library(dplyr)
source("./scripts/inputs.R", local = TRUE)
CM1 <- run_covid(
t = time_seq,
pp = parm_values,
vals = c(
ps = 0.25,
du = 12,
cc = 20
),
statev = state_var
)
new_vals <- expand.grid(
ps = seq(0, 1, 0.01),
du = 8:30,
cc =  seq(20, 300, 20)
)
out <- run_covid(
t = time_seq,
pp = parm_values,
vals = c(ps=.75, du = 15, cc = 20),
statev = state_var, ret_cm = FALSE
)
if (file.exists("./output/cm_res.RData")) {
load("./output/cm_res.RData")
} else {
cm_res <- sapply(1:nrow(new_vals), function(ii) {
run_covid(
t = time_seq,
pp = parm_values,
vals = new_vals[ii, ],
statev = state_var
)
})
save(cm_res, file = "./output/cm_res.RData")
}
library(readxl)
source("./scripts/functions.R", local = TRUE)
pp2 <- read_excel("./data/ebola_par.xlsx", sheet = "ebola_par")
View(pp2)
parm_values2 <- pp2$Value
names(parm_values2) <- pp2$Code
parm_values2 <- parm_values2[1:11]
View(pp2)
parm_values2
N0 <- 150000 # Assumed total population
ss <- read_excel("./data/states.xlsx", sheet = "states")
state_var <- ss$Value
names(state_var) <- ss$Code
time_seq <- seq(0, 365, 1)
library(dplyr)
CM1 <- run_covid(
t = time_seq,
pp = parm_values2,
vals = c(
ps = 0.25,
du = 12,
cc = 20
),
statev = state_var
)
library(readxl)
source("./scripts/functions.R", local = TRUE)
pp <- read_excel("./data/ebola_par.xlsx", sheet = "ebola_par")
parm_values <- pp$Value
names(parm_values) <- pp$Code
parm_values <- parm_values[1:11]
N0 <- 150000 # Assumed total population
ss <- read_excel("./data/states.xlsx", sheet = "states")
state_var <- ss$Value
names(state_var) <- ss$Code
time_seq <- seq(0, 365, 1)
library(dplyr)
CM1 <- run_covid(
t = time_seq,
pp = parm_values,
vals = c(
ps = 0.25,
du = 12,
cc = 20
),
statev = state_var
)
parm_values
library(dplyr)
source("./scripts/inputs.R", local = TRUE)
CM1 <- run_covid(
t = time_seq,
pp = parm_values,
vals = c(
ps = 0.25,
du = 12,
cc = 20
),
statev = state_var
)
library(readxl)
source("./scripts/functions.R", local = TRUE)
pp <- read_excel("./data/sars_cov2_par.xlsx", sheet = "sars_cov2_par")
parm_values <- pp$Value
names(parm_values) <- pp$Code
parm_values <- parm_values[1:11]
parm_values
library(readxl)
source("./scripts/functions.R", local = TRUE)
library(readxl)
source("./scripts/functions.R", local = TRUE)
pp <- read_excel("./data/ebola_par.xlsx", sheet = "ebola_par")
parm_values <- pp$Value
names(parm_values) <- pp$Code
parm_values <- parm_values[1:11]
N0 <- 150000 # Assumed total population
ss <- read_excel("./data/states.xlsx", sheet = "states")
state_var <- ss$Value
names(state_var) <- ss$Code
time_seq <- seq(0, 365, 1)
library(dplyr)
CM1 <- run_covid(
t = time_seq,
pp = parm_values,
vals = c(
ps = 0.25,
du = 12,
cc = 20
),
statev = state_var
)
CM1
new_vals2 <- expand.grid(
ps = seq(0, 1, 0.01),
du = 8:30,
cc =  seq(20, 300, 20)
)
out <- run_covid(
t = time_seq,
pp = parm_values,
vals = c(ps=.75, du = 15, cc = 20),
statev = state_var, ret_cm = FALSE
)
out
run_covid(
t = time_seq,
pp = parm_values,
vals = new_vals2[3, ],
statev = state_var
)
library(ggplot2)
library(dplyr)
library(tidyr)
library(patchwork)
#load("./output/new_df.RData")
source("./scripts/run_model.R", local = TRUE)
new_out <- out %>%
pivot_longer(S:CA, values_to = "Count", names_to = "States")
model_out <- (ggplot(new_out)
+
geom_line(aes(
x = time,
y = Count,
col = States
), size = 1)
+
labs(
x = "Time(days)"
, y = "Population"
, title = "Probability of surviving is 75%, 12 days of hospitalization
with 20 availabe beds in population of 150000 individuals."
)
+
facet_wrap(~States, scales = "free")
+
ggeasy::easy_center_title()
+
theme_bw()
)
print(model_out)
if(dir.exists("./figs")){
ggsave(filename = "./figs/model_out.jpg",
plot = model_out,
width = 8.51,
height = 5.67,
units = "in")
}else{
dir.create("./figs")
ggsave(filename = "./figs/model_out.jpg",
plot = model_out,
width = 8.51,
height = 5.67,
units = "in")
}
bed_capacity <- 20
baseline_cm <- function(bed_cap, psb = .71, dub = 19) new_df %>%
filter(ps == psb, du == dub, cc == bed_cap)
plot1 <- (ggplot()
+
aes(x = ps, y = du, z = cm, color = as.character(cc)
)
+
geom_contour(breaks = c(min(new_df$cm), baseline_cm(bed_capacity)$cm, max(new_df$cm)), data = new_df[new_df$cc == bed_capacity, ])
+
geom_contour(breaks = c(min(new_df$cm), baseline_cm(180)$cm, max(new_df$cm)), data = new_df[new_df$cc == 180, ])
+
geom_point(data = baseline_cm(bed_capacity), size = 3, col = "blue")
+
lims(x = c(0, 1))
+
geom_vline(aes(xintercept = ps), data = baseline_cm(bed_capacity))
+
geom_hline(aes(yintercept = du), data = baseline_cm(bed_capacity))
+
labs(#title = "Cumulative mortality at given number of beds",
x = "Probablilty of surving"
, y = "Hospital duration (days)"
, color = "Number of beds")
+
theme_bw()
+
ggeasy::easy_center_title()
)
if(dir.exists("./figs")){
ggsave(filename = "./figs/basetoci.jpg",
plot = plot1,
width = 8.51,
height = 5.67,
units = "in")
}else{
dir.create("./figs")
ggsave(filename = "./figs/basetoci.jpg",
plot = plot1,
width = 8.51,
height = 5.67,
units = "in")
}
plot1
