),
statev = state_var
)
library(readxl)
source("./scripts/functions.R", local = TRUE)
pp <- read_excel("./data/sars_cov2_par.xlsx", sheet = "sars_cov2_par")
parm_values <- pp$Value
names(parm_values) <- pp$Code
parm_values <- parm_values[1:11]
parm_values
library(readxl)
source("./scripts/functions.R", local = TRUE)
library(readxl)
source("./scripts/functions.R", local = TRUE)
pp <- read_excel("./data/ebola_par.xlsx", sheet = "ebola_par")
parm_values <- pp$Value
names(parm_values) <- pp$Code
parm_values <- parm_values[1:11]
N0 <- 150000 # Assumed total population
ss <- read_excel("./data/states.xlsx", sheet = "states")
state_var <- ss$Value
names(state_var) <- ss$Code
time_seq <- seq(0, 365, 1)
library(dplyr)
CM1 <- run_covid(
t = time_seq,
pp = parm_values,
vals = c(
ps = 0.25,
du = 12,
cc = 20
),
statev = state_var
)
CM1
new_vals2 <- expand.grid(
ps = seq(0, 1, 0.01),
du = 8:30,
cc =  seq(20, 300, 20)
)
out <- run_covid(
t = time_seq,
pp = parm_values,
vals = c(ps=.75, du = 15, cc = 20),
statev = state_var, ret_cm = FALSE
)
out
run_covid(
t = time_seq,
pp = parm_values,
vals = new_vals2[3, ],
statev = state_var
)
library(ggplot2)
library(dplyr)
library(tidyr)
library(patchwork)
#load("./output/new_df.RData")
source("./scripts/run_model.R", local = TRUE)
new_out <- out %>%
pivot_longer(S:CA, values_to = "Count", names_to = "States")
model_out <- (ggplot(new_out)
+
geom_line(aes(
x = time,
y = Count,
col = States
), size = 1)
+
labs(
x = "Time(days)"
, y = "Population"
, title = "Probability of surviving is 75%, 12 days of hospitalization
with 20 availabe beds in population of 150000 individuals."
)
+
facet_wrap(~States, scales = "free")
+
ggeasy::easy_center_title()
+
theme_bw()
)
print(model_out)
if(dir.exists("./figs")){
ggsave(filename = "./figs/model_out.jpg",
plot = model_out,
width = 8.51,
height = 5.67,
units = "in")
}else{
dir.create("./figs")
ggsave(filename = "./figs/model_out.jpg",
plot = model_out,
width = 8.51,
height = 5.67,
units = "in")
}
bed_capacity <- 20
baseline_cm <- function(bed_cap, psb = .71, dub = 19) new_df %>%
filter(ps == psb, du == dub, cc == bed_cap)
plot1 <- (ggplot()
+
aes(x = ps, y = du, z = cm, color = as.character(cc)
)
+
geom_contour(breaks = c(min(new_df$cm), baseline_cm(bed_capacity)$cm, max(new_df$cm)), data = new_df[new_df$cc == bed_capacity, ])
+
geom_contour(breaks = c(min(new_df$cm), baseline_cm(180)$cm, max(new_df$cm)), data = new_df[new_df$cc == 180, ])
+
geom_point(data = baseline_cm(bed_capacity), size = 3, col = "blue")
+
lims(x = c(0, 1))
+
geom_vline(aes(xintercept = ps), data = baseline_cm(bed_capacity))
+
geom_hline(aes(yintercept = du), data = baseline_cm(bed_capacity))
+
labs(#title = "Cumulative mortality at given number of beds",
x = "Probablilty of surving"
, y = "Hospital duration (days)"
, color = "Number of beds")
+
theme_bw()
+
ggeasy::easy_center_title()
)
if(dir.exists("./figs")){
ggsave(filename = "./figs/basetoci.jpg",
plot = plot1,
width = 8.51,
height = 5.67,
units = "in")
}else{
dir.create("./figs")
ggsave(filename = "./figs/basetoci.jpg",
plot = plot1,
width = 8.51,
height = 5.67,
units = "in")
}
plot1
pp <- read_excel(.args[1])
.args <- if(interactive()){
c("./data/sars_cov2_par.xlsx",
"./data/sars_cov_2.RData")
}else{
commandArgs(trailingOnly = TRUE)
}
library(readxl)
pp <- read_excel(.args[1])
ss <- read_excel("./data/states.xlsx")
library(dplyr)
# Source the inputs
source("./scripts/functions.R", local = TRUE)
source("./scripts/inputs.R", local = TRUE)
new_vals <- expand.grid(
ps = seq(0, 1, 0.01),
du = 8:30,
cc =  seq(20, 300, 20)
)
# Run the model to produce all rates from the COVID
base_sar2 <- c(ps=.75, du = 15, cc = 20)
out <- run_covid(
t = time_seq,
pp = parm_values,
vals = base_sar2,
statev = state_var, ret_cm = FALSE
)
out
#read baseline vals
# if(.args[2] == "sars2"){
#   baseline_vals = c(du = , ...)
# }
# if(.args[2] == "sars1"){
#
# }
# if(.args[2] == "ebola"){
#
# }
baseline_vals <- read_excel(.args[2])
.args <- if(interactive()){
c("./data/sars_cov2_par.xlsx",
"sars_c0v_2_baseline.xlsx",
"./data/sars_cov_2.RData")
}else{
commandArgs(trailingOnly = TRUE)
}
#read baseline vals
# if(.args[2] == "sars2"){
#   baseline_vals = c(du = , ...)
# }
# if(.args[2] == "sars1"){
#
# }
# if(.args[2] == "ebola"){
#
# }
baseline_vals <- read_excel(.args[2])
c("./data/sars_cov2_par.xlsx",
"./data/sars_cov_2_baseline.xlsx",
"./data/sars_cov_2.RData")
.args <- if(interactive()){
c("./data/sars_cov2_par.xlsx",
"./data/sars_cov_2_baseline.xlsx",
"./data/sars_cov_2.RData")
}else{
commandArgs(trailingOnly = TRUE)
}
library(readxl)
#read baseline vals
# if(.args[2] == "sars2"){
#   baseline_vals = c(du = , ...)
# }
# if(.args[2] == "sars1"){
#
# }
# if(.args[2] == "ebola"){
#
# }
baseline_vals <- read_excel(.args[2])
View(baseline_vals)
#read baseline vals
# if(.args[2] == "sars2"){
#   baseline_vals = c(du = , ...)
# }
# if(.args[2] == "sars1"){
#
# }
# if(.args[2] == "ebola"){
#
# }
baseline_vals <- read_excel(.args[2])
#read baseline vals
# if(.args[2] == "sars2"){
#   baseline_vals = c(du = , ...)
# }
# if(.args[2] == "sars1"){
#
# }
# if(.args[2] == "ebola"){
#
# }
baseline_vals <- read_excel(.args[2])
baseline_vals
baseline_vals$ps
# Read Parameter values for SARS-Cov-2.
as.list(baseline_vals)
#read baseline vals
# if(.args[2] == "sars2"){
#   baseline_vals = c(du = , ...)
# }
# if(.args[2] == "sars1"){
#
# }
# if(.args[2] == "ebola"){
#
# }
baseline_vals <- as.list(read_excel(.args[2]))
#read baseline vals
# if(.args[2] == "sars2"){
#   baseline_vals = c(du = , ...)
# }
# if(.args[2] == "sars1"){
#
# }
# if(.args[2] == "ebola"){
#
# }
baseline_vals <- as.list(read_excel(.args[2]))
library(dplyr)
# Source the inputs
source("./scripts/functions.R", local = TRUE)
source("./scripts/inputs.R", local = TRUE)
new_vals <- expand.grid(
ps = seq(0, 1, 0.01),
du = 8:30,
cc =  seq(20, 300, 20)
)
out <- run_covid(
t = time_seq,
pp = parm_values,
vals = baseline_vals,
statev = state_var, ret_cm = FALSE
)
#read baseline vals
# if(.args[2] == "sars2"){
#   baseline_vals = c(du = , ...)
# }
# if(.args[2] == "sars1"){
#
# }
# if(.args[2] == "ebola"){
#
# }
baseline_vals <- as.numeric(as.list(read_excel(.args[2])))
out <- run_covid(
t = time_seq,
pp = parm_values,
vals = baseline_vals,
statev = state_var, ret_cm = FALSE
)
#read baseline vals
# if(.args[2] == "sars2"){
#   baseline_vals = c(du = , ...)
# }
# if(.args[2] == "sars1"){
#
# }
# if(.args[2] == "ebola"){
#
# }
baseline_vals_raw <- read_excel(.args[2])
baseline_vals_raw$ps
# Read Parameter values for SARS-Cov-2.
baseline_vals <- c(ps = as.numeric(baseline_vals_raw$ps),
du = as.numeric(baseline_vals_raw$du),
cc = as.numeric(baseline_vals_raw$cc))
out <- run_covid(
t = time_seq,
pp = parm_values,
vals = baseline_vals,
statev = state_var, ret_cm = FALSE
)
library(readxl)
load("~/SACEMAProject/Project/Project_Msc/data/sars_cov_2.RData")
load("~/SACEMAProject/Project/Project_Msc/data/sars_cov_2.RData")
q()
source("~/SACEMAProject/Project/Project_Msc/scripts/functions.R")
source("~/SACEMAProject/Project/Project_Msc/scripts/inputs.R")
.args <- if(interactive()){
c("./data/sars_cov_2.RData",  # inputs
"./data/sars_cov_2_baseline.xlsx",
"./output/sars_cov_2_cm_outputs.RData")  # outputs
}else{
commandArgs(trailingOnly = TRUE)
}
library(dplyr)
# Run the model to produce all rates of a disease at baseline
# base_sar2 <- c(ps=.75, du = 15, cc = 20)
baseline_output <- run_covid(
t = time_seq,
pp = parm_values,
vals = baseline_vals,
statev = state_var, ret_cm = FALSE
)
if (file.exists("./output/sars_cov_2_cm_outputs.RData")) {
load("./output/sars_cov_2_cm_outputs.RData")
} else{
cm_res <- sapply(1:nrow(new_vals), function(ii) {
run_covid(
t = time_seq,
pp = parm_values,
vals = new_vals[ii, ],
statev = state_var
)
})
}
new_df <- cbind(new_vals, cm = cm_res)
target <- tail(.args, 1)
save(c(baseline_output, new_df), file = target)
save(list = c(baseline_output, new_df), file = target)
save(baseline_output, new_df, file = target)
load("~/SACEMAProject/Project/Project_Msc/output/sars_cov_2_cm_outputs.RData")
load("~/SACEMAProject/Project/Project_Msc/data/sars_cov_2.RData")
save(list = ls(), file = target)
source("~/SACEMAProject/Project/Project_Msc/scripts/functions.R")
source("~/SACEMAProject/Project/Project_Msc/scripts/inputs.R")
.args <- if(interactive()){
c("./data/sars_cov_2.RData",  # inputs
#"./data/sars_cov_2_baseline.xlsx",
"./output/sars_cov_2_cm_outputs.RData")  # outputs
}else{
commandArgs(trailingOnly = TRUE)
}
library(dplyr)
# Run the model to produce all rates of a disease at baseline
# base_sar2 <- c(ps=.75, du = 15, cc = 20)
baseline_output <- run_covid(
t = time_seq,
pp = parm_values,
vals = baseline_vals,
statev = state_var, ret_cm = FALSE
)
if (file.exists("./output/sars_cov_2_cm_outputs.RData")) {
load("./output/sars_cov_2_cm_outputs.RData")
} else{
cm_res <- sapply(1:nrow(new_vals), function(ii) {
run_covid(
t = time_seq,
pp = parm_values,
vals = new_vals[ii, ],
statev = state_var
)
})
}
new_df <- cbind(new_vals, cm = cm_res)
new_df <- cbind(new_vals, cm = cm_res)
.args <- if(interactive()){
c("./data/sars_cov_2.RData",  # inputs
#"./data/sars_cov_2_baseline.xlsx",
"./output/sars_cov_2_outputs.RData")  # outputs
}else{
commandArgs(trailingOnly = TRUE)
}
library(dplyr)
target <- tail(.args, 1)
target
source("~/SACEMAProject/Project/Project_Msc/scripts/functions.R")
source("~/SACEMAProject/Project/Project_Msc/scripts/inputs.R")
.args <- if(interactive()){
c("./data/sars_cov_2.RData",  # inputs
#"./data/sars_cov_2_baseline.xlsx",
"./output/sars_cov_2_outputs.RData")  # outputs
}else{
commandArgs(trailingOnly = TRUE)
}
library(dplyr)
target <- tail(.args, 1)
# Run the model to produce all rates of a disease at baseline
# base_sar2 <- c(ps=.75, du = 15, cc = 20)
baseline_output <- run_covid(
t = time_seq,
pp = parm_values,
vals = baseline_vals,
statev = state_var, ret_cm = FALSE
)
run_covid(
t = time_seq,
pp = parm_values,
vals = new_vals[3, ],
statev = state_var
)
if (file.exists(target)) {
load(target)
} else{
cm_res <- sapply(1:nrow(new_vals), function(ii) {
run_covid(
t = time_seq,
pp = parm_values,
vals = new_vals[ii, ],
statev = state_var
)
})
}
new_df <- cbind(new_vals, cm = cm_res)
save(list = ls(), file = target)
new_vals
new_vals[2, ]
sapply(1:3, function(ii){ii^2})
.args <- if(interactive()){
c("./data/sars_cov_2.RData",  # inputs
"./functions/functions.RData",
"./output/sars_cov_2_outputs.RData")  # outputs
}else{
commandArgs(trailingOnly = TRUE)
}
library(dplyr)
library(deSolve)
target <- tail(.args, 1)
# Source the inputs
load(.args[[1]])
sars_cov_2_outputs <- readRDS("~/SACEMAProject/Project/Project_Msc/output/sars_cov_2_outputs.rds")
View(sars_cov_2_outputs)
View(sars_cov_2_outputs)
.args <- if(interactive()){
c("./data/sars_cov_2.RData",  # inputs
"./functions/functions.RData",
"./output/sars_cov_2_outputs.rds")  # outputs
}else{
commandArgs(trailingOnly = TRUE)
}
library(dplyr)
sars_cov_2_outputs <- readRDS("~/SACEMAProject/Project/Project_Msc/output/sars_cov_2_outputs.rds")
View(sars_cov_2_outputs)
load("~/SACEMAProject/Project/Project_Msc/data/sars_cov_2.RData")
sars_cov_2_outputs <- readRDS("~/SACEMAProject/Project/Project_Msc/output/sars_cov_2_outputs.rds")
View(sars_cov_2_outputs)
source("~/SACEMAProject/Project/Project_Msc/scripts/functions.R")
source("~/SACEMAProject/Project/Project_Msc/scripts/inputs.R")
.args <- if(interactive()){
c("./data/sars_cov_2.RData",  # inputs
"./functions/functions.RData",
"./output/sars_cov_2_outputs.rds")  # outputs
}else{
commandArgs(trailingOnly = TRUE)
}
library(dplyr)
library(deSolve)
target <- tail(.args, 1)
# Source the inputs
load(.args[[1]])
load(.args[[2]])
# Run the model to produce all rates of a disease at baseline
# base_sar2 <- c(ps=.75, du = 15, cc = 20)
baseline_output <- run_covid(
t = time_seq,
pp = parm_values,
vals = baseline_vals,
statev = state_var, ret_cm = FALSE
)
cm_res <- sapply(1:5, function(ii) {
run_covid(
t = time_seq,
pp = parm_values,
vals = new_vals[ii, ],
statev = state_var
)
})
cum_mortality_df <- cbind(new_vals, cm = cm_res)
saveRDS(object = cum_mortality_df, file = target)
sars_cov_2_outputs <- readRDS("~/SACEMAProject/Project/Project_Msc/output/sars_cov_2_outputs.rds")
View(sars_cov_2_outputs)
