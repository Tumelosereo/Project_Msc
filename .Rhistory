casual_df <- casual_df %>%
mutate(Cur_addm = rowSums(cbind(casual_df$Hts, casual_df$Htd))) %>%
mutate(cum_add_days = cumsum(Cur_addm)) %>%
select(CA, cum_add_days)
save(treat_df, casual_df, file = target)
ebola_cost_analysis <- readRDS("~/SACEMA PROJECT/Project/Project_Msc/data/ebola_cost_analysis.rds")
View(ebola_cost_analysis)
bed_scen <- readRDS("~/SACEMA PROJECT/Project/Project_Msc/data/bed_scen.rds")
View(bed_scen)
.args <- if(interactive()){
c("./output/sars_cov_2_outputs.RData",  # inputs
"./data/toci_treat.xlsx",
"./data/bed_scen.rds")  # outputs
}else{
commandArgs(trailingOnly = TRUE)
}
library(dplyr)
library(readxl)
target <- tail(.args, 1)
load(.args[[1]])
base_toc <- cum_mortality_df %>%
filter(ps == .65, du == 28, cc == 20)
base_toc
base_toc1 <- read_excel(.args[2])
base_toc1 <- read_excel(.args[2])
baseline_dat <- base_toc1$usual_value
baseline_dat
names(baseline_dat) <- base_toc1$parms
baseline_dat
cum_mortality_df %>% filter(ps == baseline_dat$ps, du == baseline_dat$du, cc == 20)
baseline_dat$ps
baseline_dat
baseline_dat[1]
typeof(baseline_dat)
cum_mortality_df %>% filter(ps == baseline_dat[1], du == baseline_dat[2], cc == 20)
base_toc
treat_toc <- cum_mortality_df %>%
filter(round(ps, 2) == round(.69, 2), du == 15, cc == 20)
treat_toc
treat_dat <- base_toc1$treat_value
treat_dat
base_toc <- cum_mortality_df %>%
filter(ps == baseline_dat[1], du == baseline_dat[2], cc == 20)
base_toc
treat_dat <- base_toc1$treat_value
names(treat_dat) <- base_toc1$parms
treat_dat
treat_toc <- cum_mortality_df %>%
filter(round(ps, 2) == round(.69, 2), du == 15, cc == 20)
cum_mortality_df %>%
filter(round(ps, 2) == treat_dat[1], du == treat_dat[2], cc == 20)
cum_mortality_df %>%
filter(ps == treat_dat[1], du == treat_dat[2], cc == 20)
cum_mortality_df %>%
filter(round(ps, 2) == treat_dat[1], du == treat_dat[2], cc == 20)
treat_toc <- cum_mortality_df %>%
filter(round(ps, 2) == round(.69, 2), du == 15, cc == 20)
treat_toc
treat_toc <- cum_mortality_df %>%
filter(round(ps, 2) == treat_dat[1], du == treat_dat[2], cc == 20)
load("~/SACEMA PROJECT/Project/Project_Msc/output/my_data.RData")
.args <- if(interactive()){
c("./output/sars_cov_2_outputs.RData",  # inputs
"./data/toci_treat.xlsx",
"./data/bed_scen.rds")  # outputs
}else{
commandArgs(trailingOnly = TRUE)
}
library(dplyr)
library(readxl)
target <- tail(.args, 1)
load(.args[[1]])
base_toc1 <- read_excel(.args[2])
baseline_dat <- base_toc1$usual_value
names(baseline_dat) <- base_toc1$parms
base_toc <- cum_mortality_df %>%
filter(ps == baseline_dat[1], du == baseline_dat[2], cc == 20)
treat_dat <- base_toc1$treat_value
names(treat_dat) <- base_toc1$parms
treat_toc <- cum_mortality_df %>%
filter(round(ps, 2) == treat_dat[1], du == treat_dat[2], cc == 20)
treat_cm <- treat_toc %>% select(cm)
treat_cm
base_toc
treat_dat
bed_scen <- cum_mortality_df %>%
filter(round(ps, 2) == round(.65, 2), du == 28) %>%
mutate(tmp = cm - as.numeric(treat_cm)) %>%
filter(abs(tmp) == min(abs(tmp)))
bed_scen
treat_cm
treat_toc
cum_mortality_df %>%
filter(round(ps, 2) == round(.65, 2), du == 28) %>%
mutate(tmp = cm - as.numeric(treat_cm))
bed_scen <- cum_mortality_df %>%
filter(round(ps, 2) == round(.65, 2), du == 28) %>%
mutate(tmp = cm - as.numeric(treat_cm)) %>%
filter(abs(tmp) == min(abs(tmp)))
baseline_dat
base_toc1
baseline_dat[1]
baseline_dat[2]
bed_scen <- cum_mortality_df %>%
filter(round(ps, 2) == baseline_dat[1], du == baseline_dat[1]) %>%
mutate(tmp = cm - as.numeric(treat_cm)) %>%
filter(abs(tmp) == min(abs(tmp)))
bed_scen <- cum_mortality_df %>%
filter(round(ps, 2) == baseline_dat[1], du == baseline_dat[2]) %>%
mutate(tmp = cm - as.numeric(treat_cm)) %>%
filter(abs(tmp) == min(abs(tmp)))
bed_scen
new_vals <- expand.grid(
ps = seq(0, 1, 0.01),
du = 8:30,
cc =  c(seq(20, 40, 1), seq(60, 300, 20))
)
new_vals
shape(new_vals)
size(new_vals)
summary(new_vals)
dim(new_vals)
nrow(new_vals)
ncol(new_vals)
dim(new_vals)
.args <- if(interactive()){
c("./output/sars_cov_2_outputs.RData",  # inputs
"./data/toci_treat.xlsx",
"./figs/sars_cov_2_plot.jpg")  # outputs
}else{
commandArgs(trailingOnly = TRUE)
}
target <- tail(.args, 1)
library(ggplot2)
library(readxl)
library(dplyr)
library(tidyr)
library(patchwork)
load(.args[[1]])
new_out <- baseline_output %>%
pivot_longer(S:CA, values_to = "Count", names_to = "States")
plot1 <- (ggplot(new_out)
+
geom_line(aes(
x = time,
y = Count,
col = States
), size = 1)
+
labs(
x = "Time(days)"
, y = "Population"
, title = "Probability of surviving is 75%, 12 days of hospitalization
with 20 availabe beds in population of 150000 individuals."
)
+
facet_wrap(~States, scales = "free")
+
ggeasy::easy_center_title()
+
theme_bw()
)
bed_capacity <- 20
p1 <- readRDS(.args[[2]])
.args[[2]]
p1 <- readRDS(.args[[2]])
p1 <- read_xlsx(.args[[2]])
p1
psb <- names(p1$usual_value)
psb
p1$usual_value
psb <- p1$usual_value[ps]
psb <- p1$usual_value["ps"]
psb
psb <- p1$usual_value["ps"]
psb
psb <- p1$usual_value
psb
names(psb) <- p1$parms
psb
psb$ps
psb[ps]
psb["ps"]
psb[1]
.args <- if(interactive()){
c("./output/sars_cov_2_outputs.RData",  # inputs
"./data/toci_treat.xlsx",
"./data/bed_scen.rds")  # outputs
}else{
commandArgs(trailingOnly = TRUE)
}
library(dplyr)
library(readxl)
target <- tail(.args, 1)
load(.args[[1]])
base_toc1 <- read_excel(.args[2])
baseline_dat <- base_toc1$usual_value
names(baseline_dat) <- base_toc1$parms
base_toc <- cum_mortality_df %>%
filter(ps == baseline_dat[1], du == baseline_dat[2], cc == 20)
baseline_dat
base_toc <- cum_mortality_df %>%
filter(ps == baseline_dat[1], du == baseline_dat[2], cc == 20)
base_toc
cum_mortality_df %>%
filter(ps == baseline_dat["ps"], du == baseline_dat["du"], cc == 20)
base_toc <- cum_mortality_df %>%
filter(ps == baseline_dat["ps"], du == baseline_dat["du"], cc == 20)
treat_dat <- base_toc1$treat_value
names(treat_dat) <- base_toc1$parms
treat_toc <- cum_mortality_df %>%
filter(round(ps, 2) == treat_dat["ps"], du == treat_dat["du"], cc == 20)
treat_cm <- treat_toc %>% select(cm)
bed_scen <- cum_mortality_df %>%
filter(round(ps, 2) == baseline_dat["ps"], du == baseline_dat["du"]) %>%
mutate(tmp = cm - as.numeric(treat_cm)) %>%
filter(abs(tmp) == min(abs(tmp)))
saveRDS(bed_scen, file = target)
psb
psb <- p1$usual_value["ps"]
names(psb) <- p1$parms
names(psb) <- p1$parms["ps"]
psb <- p1$usual_value["ps"]
names(psb) <- p1$parms["ps"]
psb
psb <- p1$usual_value
names(psb) <- p1$parms
psb
baseline_cm <- function(bed_cap, psb = .71, dub = 19) cum_mortality_df %>%
filter(ps == psb, du == dub, cc == bed_cap)
baseline_cm
baseline_cm <- function(bed_cap, psb = .71, dub = 19) cum_mortality_df %>%
filter(ps == psb, du == dub, cc == bed_cap)
psb["ps"]
psb = .71
psb
baseline_cm <- function(bed_cap, psb = psb["ps"], dub = 19) cum_mortality_df %>%
filter(ps == psb, du == dub, cc == bed_cap)
baseline_cm
plot2 <- (ggplot()
+
aes(x = ps, y = du, z = cm, color = as.character(cc)
)
+
geom_contour(breaks = c(min(cum_mortality_df$cm),
baseline_cm(bed_capacity)$cm,
max(cum_mortality_df$cm)),
data = cum_mortality_df[cum_mortality_df$cc == bed_capacity, ])
+
geom_contour(breaks = c(min(cum_mortality_df$cm),
baseline_cm(180)$cm,
max(cum_mortality_df$cm)),
data = cum_mortality_df[cum_mortality_df$cc == 180, ])
+
geom_point(data = baseline_cm(bed_capacity), size = 3, col = "blue")
+
lims(x = c(0, 1))
+
geom_vline(aes(xintercept = ps), data = baseline_cm(bed_capacity))
+
geom_hline(aes(yintercept = du), data = baseline_cm(bed_capacity))
+
labs(#title = "Cumulative mortality at given number of beds",
x = "Probablilty of surving"
, y = "Hospital duration (days)"
, color = "Number of beds")
+
theme_bw()
+
ggeasy::easy_center_title()
)
psb
psb <- p1$usual_value
names(psb) <- p1$parms
baseline_cm <- function(bed_cap, psb = psb["ps"], dub = 19) cum_mortality_df %>%
filter(ps == psb, du == dub, cc == bed_cap)
psb
psb["ps"]
plot2 <- (ggplot()
+
aes(x = ps, y = du, z = cm, color = as.character(cc)
)
+
geom_contour(breaks = c(min(cum_mortality_df$cm),
baseline_cm(bed_capacity)$cm,
max(cum_mortality_df$cm)),
data = cum_mortality_df[cum_mortality_df$cc == bed_capacity, ])
+
geom_contour(breaks = c(min(cum_mortality_df$cm),
baseline_cm(180)$cm,
max(cum_mortality_df$cm)),
data = cum_mortality_df[cum_mortality_df$cc == 180, ])
+
geom_point(data = baseline_cm(bed_capacity), size = 3, col = "blue")
+
lims(x = c(0, 1))
+
geom_vline(aes(xintercept = ps), data = baseline_cm(bed_capacity))
+
geom_hline(aes(yintercept = du), data = baseline_cm(bed_capacity))
+
labs(#title = "Cumulative mortality at given number of beds",
x = "Probablilty of surving"
, y = "Hospital duration (days)"
, color = "Number of beds")
+
theme_bw()
+
ggeasy::easy_center_title()
)
psb <- p1$usual_value
names(psb) <- p1$parms
psb
psb$ps
typeof(psb)
q <- c(1,2,3)
q
typeof(q)
q[1]
q[1,2]
q[2]
q[1;2]
q[1,2]
q[c(1,2)]
q[c(1,3)]
psb[[ps]]
psb[["ps"]]
psb["ps"]
psb[["du"]]
psb <- p1$usual_value
names(psb) <- p1$parms
baseline_cm <- function(bed_cap, psb = psb[["ps"]], dub = psb[["du"]]) cum_mortality_df %>%
filter(ps == psb, du == dub, cc == bed_cap)
plot2 <- (ggplot()
+
aes(x = ps, y = du, z = cm, color = as.character(cc)
)
+
geom_contour(breaks = c(min(cum_mortality_df$cm),
baseline_cm(bed_capacity)$cm,
max(cum_mortality_df$cm)),
data = cum_mortality_df[cum_mortality_df$cc == bed_capacity, ])
+
geom_contour(breaks = c(min(cum_mortality_df$cm),
baseline_cm(180)$cm,
max(cum_mortality_df$cm)),
data = cum_mortality_df[cum_mortality_df$cc == 180, ])
+
geom_point(data = baseline_cm(bed_capacity), size = 3, col = "blue")
+
lims(x = c(0, 1))
+
geom_vline(aes(xintercept = ps), data = baseline_cm(bed_capacity))
+
geom_hline(aes(yintercept = du), data = baseline_cm(bed_capacity))
+
labs(#title = "Cumulative mortality at given number of beds",
x = "Probablilty of surving"
, y = "Hospital duration (days)"
, color = "Number of beds")
+
theme_bw()
+
ggeasy::easy_center_title()
)
psb1 <- p1$usual_value
names(psb1) <- p1$parms
baseline_cm <- function(bed_cap, psb = psb1[["ps"]], dub = psb1[["du"]]) cum_mortality_df %>%
filter(ps == psb, du == dub, cc == bed_cap)
plot2 <- (ggplot()
+
aes(x = ps, y = du, z = cm, color = as.character(cc)
)
+
geom_contour(breaks = c(min(cum_mortality_df$cm),
baseline_cm(bed_capacity)$cm,
max(cum_mortality_df$cm)),
data = cum_mortality_df[cum_mortality_df$cc == bed_capacity, ])
+
geom_contour(breaks = c(min(cum_mortality_df$cm),
baseline_cm(180)$cm,
max(cum_mortality_df$cm)),
data = cum_mortality_df[cum_mortality_df$cc == 180, ])
+
geom_point(data = baseline_cm(bed_capacity), size = 3, col = "blue")
+
lims(x = c(0, 1))
+
geom_vline(aes(xintercept = ps), data = baseline_cm(bed_capacity))
+
geom_hline(aes(yintercept = du), data = baseline_cm(bed_capacity))
+
labs(#title = "Cumulative mortality at given number of beds",
x = "Probablilty of surving"
, y = "Hospital duration (days)"
, color = "Number of beds")
+
theme_bw()
+
ggeasy::easy_center_title()
)
plot2
baseline_cm <- function(bed_cap, psb = .71, dub = 19) cum_mortality_df %>%
filter(ps == psb, du == dub, cc == bed_cap)
plot2 <- (ggplot()
+
aes(x = ps, y = du, z = cm, color = as.character(cc)
)
+
geom_contour(breaks = c(min(cum_mortality_df$cm),
baseline_cm(bed_capacity)$cm,
max(cum_mortality_df$cm)),
data = cum_mortality_df[cum_mortality_df$cc == bed_capacity, ])
+
geom_contour(breaks = c(min(cum_mortality_df$cm),
baseline_cm(180)$cm,
max(cum_mortality_df$cm)),
data = cum_mortality_df[cum_mortality_df$cc == 180, ])
+
geom_point(data = baseline_cm(bed_capacity), size = 3, col = "blue")
+
lims(x = c(0, 1))
+
geom_vline(aes(xintercept = ps), data = baseline_cm(bed_capacity))
+
geom_hline(aes(yintercept = du), data = baseline_cm(bed_capacity))
+
labs(#title = "Cumulative mortality at given number of beds",
x = "Probablilty of surving"
, y = "Hospital duration (days)"
, color = "Number of beds")
+
theme_bw()
+
ggeasy::easy_center_title()
)
plot2
psb1
.args <- if(interactive()){
c("./output/sars_cov_2_outputs.RData",  # inputs
"./data/toci_treat.xlsx",
"./figs/sars_cov_2_plot.jpg")  # outputs
}else{
commandArgs(trailingOnly = TRUE)
}
target <- tail(.args, 1)
library(ggplot2)
library(readxl)
library(dplyr)
library(tidyr)
library(patchwork)
load(.args[[1]])
new_out <- baseline_output %>%
pivot_longer(S:CA, values_to = "Count", names_to = "States")
plot1 <- (ggplot(new_out)
+
geom_line(aes(
x = time,
y = Count,
col = States
), size = 1)
+
labs(
x = "Time(days)"
, y = "Population"
, title = "Probability of surviving is 75%, 12 days of hospitalization
with 20 availabe beds in population of 150000 individuals."
)
+
facet_wrap(~States, scales = "free")
+
ggeasy::easy_center_title()
+
theme_bw()
)
plot1
bed_capacity <- 20
baseline_cm <- function(bed_cap, psb = .71, dub = 19) cum_mortality_df %>%
filter(ps == psb, du == dub, cc == bed_cap)
plot2 <- (ggplot()
+
aes(x = ps, y = du, z = cm, color = as.character(cc)
)
+
geom_contour(breaks = c(min(cum_mortality_df$cm),
baseline_cm(bed_capacity)$cm,
max(cum_mortality_df$cm)),
data = cum_mortality_df[cum_mortality_df$cc == bed_capacity, ])
+
geom_contour(breaks = c(min(cum_mortality_df$cm),
baseline_cm(180)$cm,
max(cum_mortality_df$cm)),
data = cum_mortality_df[cum_mortality_df$cc == 180, ])
+
geom_point(data = baseline_cm(bed_capacity), size = 3, col = "blue")
+
lims(x = c(0, 1))
+
geom_vline(aes(xintercept = ps), data = baseline_cm(bed_capacity))
+
geom_hline(aes(yintercept = du), data = baseline_cm(bed_capacity))
+
labs(#title = "Cumulative mortality at given number of beds",
x = "Probablilty of surving"
, y = "Hospital duration (days)"
, color = "Number of beds")
+
theme_bw()
+
ggeasy::easy_center_title()
)
plot2
