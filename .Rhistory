library(ggplot2)
library(dplyr)
library(tidyr)
library(patchwork)
out
source("~/SACEMAProject/Project/Project_Msc/scripts/functions.R")
source("~/SACEMAProject/Project/Project_Msc/scripts/inputs.R")
time_seq
source("~/SACEMAProject/Project/Project_Msc/scripts/run_model.R")
new_df
load("./output/new_df")
load(".output/new_df.RData")
load("./output/new_df.RData")
colours <- c("S" = "black", "CM" = "orange", "R" = "blue", "V" = "yellow",
"Nt" = "brown", "CA" = "pink")
colours
new_out <- out %>%
pivot_longer(S:CA, values_to = "Count", names_to = "States")
new_out
source("./scripts/inputs.R", local = TRUE)
new_out <- out %>%
pivot_longer(S:CA, values_to = "Count", names_to = "States")
model_out <- (ggplot(new_out)
+
geom_line(aes(
x = time,
y = Count,
col = States
), size = 1)
+
labs(
x = "Time(days)",
y = "Population",
title = "Probability of surviving is 0%, 12 days of hospitalization with
5 availabe beds in population of 150000 individuals."
)
+
facet_wrap(~States, scales = "free") +
theme(plot.title = element_text(hjust = 0.5))
)
print(model_out)
if(dir.exists("./figs")){
ggsave(filename = "./figs/model_dynmc.jpg",
plot = model_dynmc,
width = 8.51,
height = 5.67,
units = "in")
}else{
dir.create("./figs")
ggsave(filename = "./figs/model_dynmc.jpg",
plot = model_dynmc,
width = 8.51,
height = 5.67,
units = "in")
}
ggsave(filename = "./figs/model_out.jpg",
plot = model_dynmc,
width = 8.51,
height = 5.67,
units = "in")
ggsave(filename = "./figs/model_out.jpg",
plot = model_out,
width = 8.51,
height = 5.67,
units = "in")
if(dir.exists("./figs")){
ggsave(filename = "./figs/model_out.jpg",
plot = model_out,
width = 8.51,
height = 5.67,
units = "in")
}else{
dir.create("./figs")
ggsave(filename = "./figs/model_out.jpg",
plot = model_dynmc,
width = 8.51,
height = 5.67,
units = "in")
}
if(dir.exists("./figs")){
ggsave(filename = "./figs/model_out.jpg",
plot = model_out,
width = 8.51,
height = 5.67,
units = "in")
}else{
dir.create("./figs")
ggsave(filename = "./figs/model_out.jpg",
plot = model_dynmc,
width = 8.51,
height = 5.67,
units = "in")
}
bed_cap <- 180
baseline_cm <- new_df %>%
filter(ps == .8, du == 15, cc == bed_cap)
(ggplot(new_df[new_df$cc == bed_cap, ])
+ aes(x = ps, y = du, z = cm)
+ geom_contour(breaks = c(min(new_df$cm),baseline_cm$cm, max(new_df$cm)))
+ lims(x = c(0,1))
+ geom_point(aes(x = baseline_cm$ps, y = baseline_cm$du), size = 5, col = "red")
+ geom_hline(aes(yintercept = du), data = baseline_cm)
+ geom_vline(aes(xintercept = ps), data = baseline_cm)
)
baseline_cm
new_df[new_df$cc == bed_cap, ]
c(min(new_df$cm),baseline_cm$cm, max(new_df$cm))
bed_cap <- 120
baseline_cm <- new_df %>%
filter(ps == .8, du == 15, cc == bed_cap)
(ggplot(new_df[new_df$cc == bed_cap, ])
+ aes(x = ps, y = du, z = cm)
+ geom_contour(breaks = c(min(new_df$cm),baseline_cm$cm, max(new_df$cm)))
+ lims(x = c(0,1))
+ geom_point(aes(x = baseline_cm$ps, y = baseline_cm$du), size = 5, col = "red")
+ geom_hline(aes(yintercept = du), data = baseline_cm)
+ geom_vline(aes(xintercept = ps), data = baseline_cm)
)
bed_cap <- 20
baseline_cm <- new_df %>%
filter(ps == .8, du == 15, cc == bed_cap)
(ggplot(new_df[new_df$cc == bed_cap, ])
+ aes(x = ps, y = du, z = cm)
+ geom_contour(breaks = c(min(new_df$cm),baseline_cm$cm, max(new_df$cm)))
+ lims(x = c(0,1))
+ geom_point(aes(x = baseline_cm$ps, y = baseline_cm$du), size = 5, col = "red")
+ geom_hline(aes(yintercept = du), data = baseline_cm)
+ geom_vline(aes(xintercept = ps), data = baseline_cm)
)
bed_cap <- 100
baseline_cm <- new_df %>%
filter(ps == .8, du == 15, cc == bed_cap)
(ggplot(new_df[new_df$cc == bed_cap, ])
+ aes(x = ps, y = du, z = cm)
+ geom_contour(breaks = c(min(new_df$cm),baseline_cm$cm, max(new_df$cm)))
+ lims(x = c(0,1))
+ geom_point(aes(x = baseline_cm$ps, y = baseline_cm$du), size = 5, col = "red")
+ geom_hline(aes(yintercept = du), data = baseline_cm)
+ geom_vline(aes(xintercept = ps), data = baseline_cm)
)
View(new_df)
new_vals <- expand.grid(
ps = seq(0, 1, 0.05),
du = 8:30,
cc =  seq(20, 300, 20)
)
out <- run_covid(
t = time_seq,
pp = parm_values,
vals = c(ps=.75, du = 15, cc = 20),
statev = state_var, ret_cm = FALSE
)
run_covid(
t = time_seq,
pp = parm_values,
vals = new_vals[3, ],
statev = state_var
)
if (file.exists("./output/cm_res.RData")) {
load("./output/cm_res.RData")
} else {
cm_res <- sapply(1:nrow(new_vals), function(ii) {
run_covid(
t = time_seq,
pp = parm_values,
vals = new_vals[ii, ],
statev = state_var
)
})
save(cm_res, file = "./output/cm_res.RData")
}
new_vals <- expand.grid(
ps = seq(0, 1, 0.05),
du = 8:30,
cc =  seq(20, 300, 20)
)
out <- run_covid(
t = time_seq,
pp = parm_values,
vals = c(ps=.75, du = 15, cc = 20),
statev = state_var, ret_cm = FALSE
)
run_covid(
t = time_seq,
pp = parm_values,
vals = new_vals[3, ],
statev = state_var
)
if (file.exists("./output/cm_res.RData")) {
load("./output/cm_res.RData")
} else {
cm_res <- sapply(1:nrow(new_vals), function(ii) {
run_covid(
t = time_seq,
pp = parm_values,
vals = new_vals[ii, ],
statev = state_var
)
})
save(cm_res, file = "./output/cm_res.RData")
}
new_df <- cbind(new_vals, cm = cm_res)
save(new_df, file = "./output/new_df.RData")
library(ggplot2)
library(dplyr)
library(tidyr)
library(patchwork)
load("./output/new_df.RData")
source("./scripts/inputs.R", local = TRUE)
new_out <- out %>%
pivot_longer(S:CA, values_to = "Count", names_to = "States")
model_out <- (ggplot(new_out)
+
geom_line(aes(
x = time,
y = Count,
col = States
), size = 1)
+
labs(
x = "Time(days)",
y = "Population",
title = "Probability of surviving is 0%, 12 days of hospitalization
with 5 availabe beds in population of 150000 individuals."
)
+
facet_wrap(~States, scales = "free") +
theme(plot.title = element_text(hjust = 0.5))
)
print(model_out)
if(dir.exists("./figs")){
ggsave(filename = "./figs/model_out.jpg",
plot = model_out,
width = 8.51,
height = 5.67,
units = "in")
}else{
dir.create("./figs")
ggsave(filename = "./figs/model_out.jpg",
plot = model_dynmc,
width = 8.51,
height = 5.67,
units = "in")
}
bed_cap <- 180
baseline_cm <- new_df %>%
filter(ps == .8, du == 15, cc == bed_cap)
(ggplot(new_df[new_df$cc == bed_cap, ])
+ aes(x = ps, y = du, z = cm)
+ geom_contour(breaks = c(min(new_df$cm),baseline_cm$cm, max(new_df$cm)))
+ lims(x = c(0,1))
+ geom_point(aes(x = baseline_cm$ps, y = baseline_cm$du), size = 5, col = "red")
+ geom_hline(aes(yintercept = du), data = baseline_cm)
+ geom_vline(aes(xintercept = ps), data = baseline_cm)
)
View(new_df)
(ggplot(new_df[new_df$cc == bed_cap, ])
+ aes(x = ps, y = du, z = cm)
+ geom_contour(breaks = c(min(new_df$cm),baseline_cm$cm, max(new_df$cm)))
+ lims(x = c(0,1))
#+ geom_point(aes(x = baseline_cm$ps, y = baseline_cm$du), size = 5, col = "red")
#+ geom_hline(aes(yintercept = du), data = baseline_cm)
#+ geom_vline(aes(xintercept = ps), data = baseline_cm)
)
bed_cap <- 100
baseline_cm <- new_df %>%
filter(ps == .8, du == 15, cc == bed_cap)
(ggplot(new_df[new_df$cc == bed_cap, ])
+ aes(x = ps, y = du, z = cm)
+ geom_contour(breaks = c(min(new_df$cm),baseline_cm$cm, max(new_df$cm)))
+ lims(x = c(0,1))
#+ geom_point(aes(x = baseline_cm$ps, y = baseline_cm$du), size = 5, col = "red")
#+ geom_hline(aes(yintercept = du), data = baseline_cm)
#+ geom_vline(aes(xintercept = ps), data = baseline_cm)
)
bed_cap <- 90
baseline_cm <- new_df %>%
filter(ps == .8, du == 15, cc == bed_cap)
(ggplot(new_df[new_df$cc == bed_cap, ])
+ aes(x = ps, y = du, z = cm)
+ geom_contour(breaks = c(min(new_df$cm),baseline_cm$cm, max(new_df$cm)))
+ lims(x = c(0,1))
#+ geom_point(aes(x = baseline_cm$ps, y = baseline_cm$du), size = 5, col = "red")
#+ geom_hline(aes(yintercept = du), data = baseline_cm)
#+ geom_vline(aes(xintercept = ps), data = baseline_cm)
)
bed_cap <- 80
baseline_cm <- new_df %>%
filter(ps == .8, du == 15, cc == bed_cap)
(ggplot(new_df[new_df$cc == bed_cap, ])
+ aes(x = ps, y = du, z = cm)
+ geom_contour(breaks = c(min(new_df$cm),baseline_cm$cm, max(new_df$cm)))
+ lims(x = c(0,1))
#+ geom_point(aes(x = baseline_cm$ps, y = baseline_cm$du), size = 5, col = "red")
#+ geom_hline(aes(yintercept = du), data = baseline_cm)
#+ geom_vline(aes(xintercept = ps), data = baseline_cm)
)
