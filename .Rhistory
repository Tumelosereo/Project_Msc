y = cost_value)
, size = 1.5)
+
labs(x = bquote(C[B]/C[A]),
y = bquote(C[T]/C[A]))
+
geom_vline(xintercept  = 10306/3179, color = "red"
, size = 1.5)
+
geom_ribbon(aes(x = x_value,
ymin = cost_value
, ymax = rep(max(cost_value), nrow(cost_df))
),
fill = "lightblue"
, alpha = 0.5
)
+
geom_ribbon(aes(x = x_value,
ymin = rep(min(cost_value), nrow(cost_df))
, ymax = cost_value
)
,fill = "yellow"
, alpha = 0.5
)
+
scale_color_manual(values = colors)
+
theme(panel.background = element_rect(fill = "#00ab75"))
)
plot3
plot3 <- (ggplot(cost_df)
+
geom_line(aes(x = x_value,
y = cost_value)
, size = 1.5)
+
labs(x = bquote(C[B]/C[A]),
y = bquote(C[T]/C[A]))
+
geom_vline(xintercept  = 10306/3179, color = "red"
, size = 1.5)
+
geom_ribbon(aes(x = x_value,
ymin = cost_value
, ymax = rep(max(cost_value), nrow(cost_df))
),
fill = "lightblue"
, alpha = 0.5
)
+
geom_ribbon(aes(x = x_value,
ymin = rep(min(cost_value), nrow(cost_df))
, ymax = cost_value
)
,fill = "yellow"
, alpha = 0.5
)
+
scale_color_manual(values = colors)
+
theme_classic()
)
plot3
plot3 <- (ggplot(cost_df)
+
geom_line(aes(x = x_value,
y = cost_value)
, size = 1.5)
+
labs(x = bquote(C[B]/C[A]),
y = bquote(C[T]/C[A]))
+
geom_vline(xintercept  = 10306/3179, color = "red"
, size = 1.5)
+
geom_ribbon(aes(x = x_value,
ymin = cost_value
, ymax = rep(max(cost_value), nrow(cost_df))
),
fill = "lightblue"
, alpha = 0.5
)
+
geom_ribbon(aes(x = x_value,
ymin = rep(min(cost_value), nrow(cost_df))
, ymax = cost_value
)
,fill = "yellow"
, alpha = 0.5
)
+
scale_color_manual(values = colors)
+
theme_dark()
)
plot3
plot3 <- (ggplot(cost_df)
+
geom_line(aes(x = x_value,
y = cost_value)
, size = 1.5)
+
labs(x = bquote(C[B]/C[A]),
y = bquote(C[T]/C[A]))
+
geom_vline(xintercept  = 10306/3179, color = "red"
, size = 1.5)
+
geom_ribbon(aes(x = x_value,
ymin = cost_value
, ymax = rep(max(cost_value), nrow(cost_df))
),
fill = "lightblue"
, alpha = 0.5
)
+
geom_ribbon(aes(x = x_value,
ymin = rep(min(cost_value), nrow(cost_df))
, ymax = cost_value
)
,fill = "yellow"
, alpha = 0.5
)
+
scale_color_manual(values = colors)
+
theme_get()
)
plot3
plot3 <- (ggplot(cost_df)
+
geom_line(aes(x = x_value,
y = cost_value)
, size = 1.5)
+
labs(x = bquote(C[B]/C[A]),
y = bquote(C[T]/C[A]))
+
geom_vline(xintercept  = 10306/3179, color = "red"
, size = 1.5)
+
geom_ribbon(aes(x = x_value,
ymin = cost_value
, ymax = rep(max(cost_value), nrow(cost_df))
),
fill = "lightblue"
, alpha = 0.5
)
+
geom_ribbon(aes(x = x_value,
ymin = rep(min(cost_value), nrow(cost_df))
, ymax = cost_value
)
,fill = "yellow"
, alpha = 0.5
)
+
scale_color_manual(values = colors)
+
theme_light()
)
plot3
plot3 <- (ggplot(cost_df)
+
geom_line(aes(x = x_value,
y = cost_value)
, size = 1.5)
+
labs(x = bquote(C[B]/C[A]),
y = bquote(C[T]/C[A]))
+
geom_vline(xintercept  = 10306/3179, color = "red"
, size = 1.5)
+
geom_ribbon(aes(x = x_value,
ymin = cost_value
, ymax = rep(max(cost_value), nrow(cost_df))
),
fill = "lightblue"
, alpha = 0.5
)
+
geom_ribbon(aes(x = x_value,
ymin = rep(min(cost_value), nrow(cost_df))
, ymax = cost_value
)
,fill = "yellow"
, alpha = 0.5
)
+
scale_color_manual(values = colors)
+
theme_linedraw()
)
plot3
plot3 <- (ggplot(cost_df)
+
geom_line(aes(x = x_value,
y = cost_value)
, size = 1.5)
+
labs(x = bquote(C[B]/C[A]),
y = bquote(C[T]/C[A]))
+
geom_vline(xintercept  = 10306/3179, color = "red"
, size = 1.5)
+
geom_ribbon(aes(x = x_value,
ymin = cost_value
, ymax = rep(max(cost_value), nrow(cost_df))
),
fill = "lightblue"
, alpha = 0.5
)
+
geom_ribbon(aes(x = x_value,
ymin = rep(min(cost_value), nrow(cost_df))
, ymax = cost_value
)
,fill = "yellow"
, alpha = 0.5
)
+
scale_color_manual(values = colors)
+
theme_minimal()
)
plot3
plot3 <- (ggplot(cost_df)
+
geom_line(aes(x = x_value,
y = cost_value)
, size = 1.5)
+
labs(x = bquote(C[B]/C[A]),
y = bquote(C[T]/C[A]))
+
geom_vline(xintercept  = 10306/3179, color = "red"
, size = 1.5)
+
geom_ribbon(aes(x = x_value,
ymin = cost_value
, ymax = rep(max(cost_value), nrow(cost_df))
),
fill = "lightblue"
, alpha = 0.5
)
+
geom_ribbon(aes(x = x_value,
ymin = rep(min(cost_value), nrow(cost_df))
, ymax = cost_value
)
,fill = "yellow"
, alpha = 0.5
)
+
scale_color_manual(values = colors)
+
theme_classic()
)
plot3
plot3 <- (ggplot(cost_df)
+
geom_line(aes(x = x_value,
y = cost_value)
, size = 1.5)
+
labs(x = bquote(C[B]/C[A]),
y = bquote(C[T]/C[A]))
+
geom_vline(xintercept  = 10306/3179, color = "red"
, size = 1.5)
+
geom_ribbon(aes(x = x_value,
ymin = cost_value
, ymax = rep(max(cost_value), nrow(cost_df))
),
fill = "lightblue"
, alpha = 0.5
)
+
geom_ribbon(aes(x = x_value,
ymin = rep(min(cost_value), nrow(cost_df))
, ymax = cost_value
)
,fill = "yellow"
, alpha = 0.5
)
+
scale_color_manual(values = colors)
+
theme_void()
)
plot3
plot3 <- (ggplot(cost_df)
+
geom_line(aes(x = x_value,
y = cost_value)
, size = 1.5)
+
labs(x = bquote(C[B]/C[A]),
y = bquote(C[T]/C[A]))
+
geom_vline(xintercept  = 10306/3179, color = "red"
, size = 1.5)
+
geom_ribbon(aes(x = x_value,
ymin = cost_value
, ymax = rep(max(cost_value), nrow(cost_df))
),
fill = "lightblue"
, alpha = 0.5
)
+
geom_ribbon(aes(x = x_value,
ymin = rep(min(cost_value), nrow(cost_df))
, ymax = cost_value
)
,fill = "yellow"
, alpha = 0.5
)
+
scale_color_manual(values = colors)
+
theme_grey()
)
plot3
plot3 <- (ggplot(cost_df)
+
geom_line(aes(x = x_value,
y = cost_value)
, size = 1.5)
+
labs(x = bquote(C[B]/C[A]),
y = bquote(C[T]/C[A]))
+
geom_vline(xintercept  = 10306/3179, color = "red"
, size = 1.5)
+
geom_ribbon(aes(x = x_value,
ymin = cost_value
, ymax = rep(max(cost_value), nrow(cost_df))
),
fill = "lightblue"
, alpha = 0.5
)
+
geom_ribbon(aes(x = x_value,
ymin = rep(min(cost_value), nrow(cost_df))
, ymax = cost_value
)
,fill = "yellow"
, alpha = 0.5
)
+
scale_color_manual(values = colors)
+
theme_bw()
)
plot3
.args <- if(interactive()){
c("./output/sars_cov_2_outputs.RData",  # inputs
"./data/toci_treat.xlsx",
"./figs/sars_cov_2_plot.jpg")  # outputs
}else{
commandArgs(trailingOnly = TRUE)
}
target <- tail(.args, 1)
library(ggplot2)
library(readxl)
library(dplyr)
library(tidyr)
library(patchwork)
load(.args[[1]])
bed_capacity <- 20
p1 <- read_xlsx(.args[[2]])
psb1 <- p1$usual_value
names(psb1) <- p1$parms
baseline_cm <- function(bed_cap, psb = psb1[["ps"]], dub = psb1[["du"]]) cum_mortality_df %>%
filter(ps == psb, du == dub, cc == bed_cap)
plot2 <- (ggplot()
+
aes(x = ps, y = du, z = cm, color = as.character(cc)
)
+
geom_contour(breaks = c(min(cum_mortality_df$cm),
baseline_cm(bed_capacity)$cm,
max(cum_mortality_df$cm)),
data = cum_mortality_df[cum_mortality_df$cc == bed_capacity, ])
+
geom_contour(breaks = c(min(cum_mortality_df$cm),
baseline_cm(100)$cm,
max(cum_mortality_df$cm)),
data = cum_mortality_df[cum_mortality_df$cc == 100, ])
+
geom_contour(breaks = c(min(cum_mortality_df$cm),
baseline_cm(140)$cm,
max(cum_mortality_df$cm)),
data = cum_mortality_df[cum_mortality_df$cc == 140, ])
+
geom_point(data = baseline_cm(bed_capacity), size = 3, col = "blue")
+
lims(x = c(0, 1))
+
geom_vline(aes(xintercept = ps), data = baseline_cm(bed_capacity))
+
geom_hline(aes(yintercept = du), data = baseline_cm(bed_capacity))
+
labs(#title = "Cumulative mortality at given number of beds",
x = "Probability of surviving"
, y = "Hospital duration (days)"
, color = "Number of beds")
+
theme_bw()
+
ggeasy::easy_center_title()
)
plot2
plot2 <- (ggplot()
+
aes(x = ps, y = du, z = cm, color = as.character(cc)
)
+
geom_contour(breaks = c(min(cum_mortality_df$cm),
baseline_cm(bed_capacity)$cm,
max(cum_mortality_df$cm)),
data = cum_mortality_df[cum_mortality_df$cc == bed_capacity, ])
+
geom_contour(breaks = c(min(cum_mortality_df$cm),
baseline_cm(100)$cm,
max(cum_mortality_df$cm)),
data = cum_mortality_df[cum_mortality_df$cc == 100, ])
+
geom_contour(breaks = c(min(cum_mortality_df$cm),
baseline_cm(140)$cm,
max(cum_mortality_df$cm)),
data = cum_mortality_df[cum_mortality_df$cc == 140, ])
+
geom_point(data = baseline_cm(bed_capacity), size = 3, col = "blue")
+
lims(x = c(0.5, 1))
+
geom_vline(aes(xintercept = ps), data = baseline_cm(bed_capacity))
+
geom_hline(aes(yintercept = du), data = baseline_cm(bed_capacity))
+
labs(#title = "Cumulative mortality at given number of beds",
x = "Probability of surviving"
, y = "Hospital duration (days)"
, color = "Number of beds")
+
theme_bw()
+
ggeasy::easy_center_title()
)
plot2
plot2 <- (ggplot()
+
aes(x = ps, y = du, z = cm, color = as.character(cc)
)
+
geom_contour(breaks = c(min(cum_mortality_df$cm),
baseline_cm(bed_capacity)$cm,
max(cum_mortality_df$cm)),
data = cum_mortality_df[cum_mortality_df$cc == bed_capacity, ])
+
geom_contour(breaks = c(min(cum_mortality_df$cm),
baseline_cm(100)$cm,
max(cum_mortality_df$cm)),
data = cum_mortality_df[cum_mortality_df$cc == 100, ])
+
geom_contour(breaks = c(min(cum_mortality_df$cm),
baseline_cm(140)$cm,
max(cum_mortality_df$cm)),
data = cum_mortality_df[cum_mortality_df$cc == 140, ])
+
geom_point(data = baseline_cm(bed_capacity), size = 3, col = "blue")
+
lims(x = c(0.7, 1))
+
geom_vline(aes(xintercept = ps), data = baseline_cm(bed_capacity))
+
geom_hline(aes(yintercept = du), data = baseline_cm(bed_capacity))
+
labs(#title = "Cumulative mortality at given number of beds",
x = "Probability of surviving"
, y = "Hospital duration (days)"
, color = "Number of beds")
+
theme_bw()
+
ggeasy::easy_center_title()
)
plot2
6*4
6*4*6
tmp <- installed.packages()
installedpkgs <- as.vector(tmp[is.na(tmp[,"Priority"]), 1])
save(installedpkgs, file="installed_old.rda")
view(tmp)
View(tmp)
load("installed_old.rda")
tmp <- installed.packages()
installedpkgs.new <- as.vector(tmp[is.na(tmp[,"Priority"]), 1])
missing <- setdiff(installedpkgs, installedpkgs.new)
install.packages(missing)
update.packages()
install.packages("EpiNow2")
install.packages("EpiNow2", repos = "https://epiforecasts.r-universe.dev")
library(EpiNow2)
remotes::install_github("epiforecasts/EpiNow2")
remotes::install_github("epiforecasts/EpiNow2")
